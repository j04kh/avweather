{"version":3,"sources":["assets/images/logo.png","components/Home/styles.js","components/Home/index.js","components/Details/styles.js","components/Details/NavBar.js","components/Maps/styles.js","components/Maps/index.js","components/Details/Metar.js","components/Details/Taf.js","components/Details/AirportInfo.js","hooks/useFetch.js","components/Details/index.js","components/Nearby/styles.js","components/Nearby/StationPreview.js","components/Nearby/List.js","components/Nearby/index.js","App.js","index.js"],"names":["Container","styled","div","SearchForm","form","SearchButton","button","ErrorMsg","p","props","error","Home","history","useHistory","useState","search","setSearch","resStatus","setResStatus","URL","token","process","errorHandler","setTimeout","src","Logo","alt","onChange","e","target","value","onSubmit","preventDefault","fetch","headers","Authorization","then","res","ok","push","searchStation","type","placeholder","className","LoadingContainer","CustomNavBar","nav","NavButton","left","right","MainWrapper","MetarTopRow","WindAndConditionsRow","ConditionsFlag","conditions","RawInfo","TimeAgoContainer","TimeAgo","timeAgo","includes","FindNearbyButton","NavBar","isForNearby","nearby","onClick","goBack","iata","icao","seeOnMap","MapContainer","ShowInMaps","coords","useParams","mapsKey","mapUrl","title","Metar","info","style","fontWeight","marginRight","windInfo","raw","Taf","marginLeft","marginBottom","AirportInfo","lat","lon","elevFt","elevM","getRunwaysList","useFetch","ident","stationUrl","metarUrl","tafUrl","stationData","setStationData","metarData","setMetarData","tafData","setTafData","infoLoading","setInfoLoading","metarLoading","setMetarLoading","tafLoading","setTafLoading","getStationData","a","json","newStationData","latitude","longitude","name","country","runways","elev_ft","elevation_ft","elev_m","elevation_m","console","getMetarData","sincePublished","timeSincePublished","newMetarData","flight_rules","wind_direction","wind_speed","since","getTafData","newTafData","data","offset","Date","getTimezoneOffset","now","toLocal","parseInt","daypublished","slice","publishedHr","publishedMin","date","seconds","Math","floor","interval","timeSince","getFullYear","getMonth","useEffect","Details","roundCoord","coord","toFixed","direction","speed","abs","formatCoordLat","formatCoordLong","listRwys","map","rwy","ident1","ident2","length","findNearbyAirports","TopInfoContainer","ListContainer","StationPreview","d","roundDistance","dist","from","List","url","setNearby","listNearby","to","station","nautical_miles","catch","log","Nearby","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a024c123.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.19da3b99.png\";","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n  overflow-y: hidden;\n  background-color: #232831;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const SearchForm = styled.form`\n  background-color: #c3c7d0;\n  height: 36px;\n  width: 210px;\n  border-radius: 20px 20px 20px 20px;\n  display: flex;\n`;\n\nexport const SearchButton = styled.button`\n  align-self: center;\n  color: #eeeeee;\n`;\n\nexport const ErrorMsg = styled.p`\n  color: red;\n  font-size: 0.85rem;\n  visibility: ${(props) => (props.error === \"ERROR\" ? \"visible\" : \"hidden\")};\n`;\n","import { useState } from \"react\";\nimport \"../../assets/styles/App.css\";\nimport Logo from \"../../assets/images/logo.png\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useHistory } from \"react-router-dom\";\nimport { Container, SearchForm, SearchButton, ErrorMsg } from \"./styles\";\n\nconst Home = () => {\n  let history = useHistory();\n\n  const [search, setSearch] = useState(\"\");\n  const [resStatus, setResStatus] = useState(\"OK\");\n\n  const URL = `https://avwx.rest/api/station/${search}?&format=json`;\n  const token = `${process.env.REACT_APP_TOKEN}`;\n\n  const searchStation = (e) => {\n    e.preventDefault();\n    fetch(URL, {\n      headers: {\n        Authorization: `TOKEN ${token}`,\n      },\n    }).then((res) => {\n      setSearch(\"\");\n      res.ok ? history.push(`/station/${search}`) : errorHandler();\n    });\n  };\n\n  //Shows error message if airport not found\n  const errorHandler = () => {\n    setResStatus(\"ERROR\");\n    setTimeout(() => {\n      setResStatus(\"OK\");\n    }, 2200);\n  };\n\n  return (\n    <Container>\n      <img src={Logo} alt=\"logo\" />\n      <h1>AvWeather</h1>\n      <SearchForm\n        onChange={(e) => setSearch(e.target.value)}\n        onSubmit={(e) => searchStation(e)}\n      >\n        <input type=\"text\" placeholder=\"ICAO...\" value={search} />\n        <SearchButton className=\"material-icon\" type=\"submit\">\n          <SearchIcon className=\"material-icon primary\" />\n        </SearchButton>\n      </SearchForm>\n      <ErrorMsg error={resStatus}>Error: Airport not found</ErrorMsg>\n    </Container>\n  );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\nexport const LoadingContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-color: #232831;\n  font-size: 0.85rem;\n  display: grid;\n  place-items: center;\n`;\n\nexport const CustomNavBar = styled.nav`\n  background-color: #252e41;\n  width: 100%;\n  height: 50px;\n  border-radius: 0 0 8px 8px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const NavButton = styled.button`\n  align-self: center;\n  color: #eeeeee;\n  margin-left: ${(props) => (props.left ? \"10px\" : \"\")};\n  margin-right: ${(props) => (props.right ? \"10px\" : \"\")};\n`;\n\nexport const MainWrapper = styled.div`\n  background-color: #232831;\n  min-height: 100vh;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  @media (min-width: 500px) {\n    width: 500px;\n    position: relative;\n    left: 50%;\n    transform: translateX(-50%);\n  }\n`;\n\n/* Reutilizable container used for metar, taf and airport info */\nexport const Container = styled.div`\n  background-color: #252e41;\n  height: auto;\n  max-height: 140px;\n  width: 95%;\n  margin-top: 5%;\n  border-radius: 8px 8px 8px 8px;\n  align-self: center;\n  overflow-y: scroll;\n  /* small devices */\n  @media (max-height: 600px) {\n    height: auto;\n    max-height: 110px;\n    font-size: 0.85rem;\n    p {\n      font-size: 0.75rem;\n    }\n  }\n`;\n\nexport const MetarTopRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-right: 10px;\n  margin-left: 10px;\n  height: 35px;\n  align-items: center;\n  margin-top: 5px;\n`;\n\nexport const WindAndConditionsRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-self: center;\n  @media (max-height: 600px) {\n    font-size: 0.85rem;\n  }\n`;\n\nexport const ConditionsFlag = styled.p`\n  padding: 1.5px;\n  font-weight: 700;\n  font-size: 0.85rem;\n  color: #eeeeee;\n  border-radius: 5px 5px 5px 5px;\n  text-align: center;\n  background-color: ${(props) =>\n    props.conditions === \"IMC\" ? \"#e49400\" : \"#02c802\"};\n  @media (max-height: 600px) {\n    font-size: 0.75rem;\n  }\n`;\n\nexport const RawInfo = styled.p`\n  font-family: \"RobotoMono\", sans-serif;\n  margin-left: 10px;\n  margin-right: 10px;\n  margin-bottom: 12px;\n  margin-top: 0;\n`;\n\nexport const TimeAgoContainer = styled.div`\n  display: flex;\n  width: 100%;\n  height: auto;\n  justify-content: flex-end;\n  top: auto;\n  margin-bottom: 10px;\n`;\n\nexport const TimeAgo = styled.p`\n  font-size: 0.8rem;\n  text-align: end;\n  margin-bottom: 0px;\n  margin-right: 10px;\n  margin-top: 0;\n  height: 100%;\n  color: ${(props) => (props.timeAgo.includes(\"minutes\") ? \"#02c802\" : \"red\")};\n  @media (max-height: 600px) {\n    font-size: 0.75rem;\n    margin-top: 5px;\n  }\n`;\n\nexport const FindNearbyButton = styled.button`\n  color: #c3c7d0;\n  position: absolute;\n  bottom: 2%;\n  align-self: center;\n  background-color: #252e41;\n  border-radius: 25px 25px 25px 25px;\n  font-size: 0.85rem;\n  font-weight: 700;\n  width: 140px;\n  @media (min-width: 500px) {\n    bottom: 10%;\n  }\n`;\n","import ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport MapIcon from \"@material-ui/icons/Map\";\nimport { CustomNavBar, NavButton } from \"./styles\";\nimport { useHistory } from \"react-router-dom\";\n\nconst NavBar = (props) => {\n  let history = useHistory();\n\n  //When NavBar is used on Nearby or Maps, nearby prop is passed\n  const isForNearby = props.nearby;\n\n  return (\n    <CustomNavBar>\n      <NavButton left onClick={(e) => history.goBack()}>\n        <ArrowBackIcon className=\"material-icon\" />\n      </NavButton>\n      <h2 className={`material-icon ${isForNearby && \"medium\"}`}>\n        {props.iata ? props.iata + \"/\" + props.icao : props.icao}\n      </h2>\n      <NavButton onClick={(e) => props.seeOnMap()}>\n        <MapIcon\n          className={`material-icon right ${isForNearby && \"invisible\"}`}\n        />\n      </NavButton>\n    </CustomNavBar>\n  );\n};\n\nexport default NavBar;\n","import styled from \"styled-components\";\n\nexport const MapContainer = styled.div`\n  background-color: #232831;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import \"../../assets/styles/App.css\";\nimport { useParams } from \"react-router-dom\";\nimport NavBar from \"../Details/NavBar\";\nimport { MapContainer } from \"./styles\";\n\nconst ShowInMaps = (props) => {\n  let { coords } = useParams();\n\n  const mapsKey = `${process.env.REACT_APP_MAPS_KEY}`;\n  const mapUrl = `https://www.google.com/maps/embed/v1/view?\n\t\t\t\t\t\t\t\t\t\tcenter=${coords}&\n\t\t\t\t\t\t\t\t\t\tzoom=14&\n\t\t\t\t\t\t\t\t\t\tkey=${mapsKey}&\n\t\t\t\t\t\t\t\t\t\tmaptype=satellite`;\n\n  return (\n    <div className=\"main\">\n      <NavBar nearby icao=\"Location\" />\n      <MapContainer>\n        <iframe className=\"map\" title=\"maps\" src={mapUrl} />\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default ShowInMaps;\n","import {\n  Container,\n  MetarTopRow,\n  WindAndConditionsRow,\n  ConditionsFlag,\n  RawInfo,\n  TimeAgoContainer,\n  TimeAgo,\n} from \"./styles\";\n\nconst Metar = (props) => {\n  return (\n    <Container info=\"metar\">\n      <MetarTopRow>\n        <p style={{ fontWeight: 600 }}>METAR</p>\n        <WindAndConditionsRow>\n          <p style={{ marginRight: 10 }}>{props.windInfo}</p>\n          <ConditionsFlag conditions={props.conditions}>\n            {props.conditions}\n          </ConditionsFlag>\n        </WindAndConditionsRow>\n      </MetarTopRow>\n      <RawInfo>{props.raw}</RawInfo>\n      <TimeAgoContainer>\n        <TimeAgo timeAgo={props.timeAgo}>{props.timeAgo}</TimeAgo>\n      </TimeAgoContainer>\n    </Container>\n  );\n};\n\nexport default Metar;\n","import { Container, RawInfo } from \"./styles\";\n\nconst Taf = (props) => {\n  return (\n    <Container>\n      <p style={{ fontWeight: 600, marginLeft: 10, marginBottom: 5 }}>TAF</p>\n      <RawInfo>{props.raw}</RawInfo>\n    </Container>\n  );\n};\n\nexport default Taf;\n","import \"../../assets/styles/App.css\";\nimport { Container } from \"./styles\";\n\nconst AirportInfo = (props) => {\n  return (\n    <Container>\n      <p style={{ fontWeight: 600, marginLeft: 10, marginBottom: 5 }}>\n        Airport Info\n      </p>\n      <div className=\"flex col\">\n        <p className=\"text small\">\n          <span style={{ fontWeight: 700 }}>Coordinates: </span>\n          {props.lat} {props.lon}\n        </p>\n        <p className=\"text small\">\n          <span style={{ fontWeight: 700 }}>Elevation: </span> {props.elevFt}ft\n          / {props.elevM}m{\" \"}\n        </p>\n        {props.getRunwaysList()}\n      </div>\n    </Container>\n  );\n};\n\nexport default AirportInfo;\n","import { useState, useEffect } from \"react\";\n\nconst useFetch = (ident) => {\n  const stationUrl = `https://avwx.rest/api/station/${ident}?&format=json`;\n  const metarUrl = `https://avwx.rest/api/metar/${ident}?&format=json`;\n  const tafUrl = `https://avwx.rest/api/taf/${ident}?&format=json`;\n  const token = `${process.env.REACT_APP_TOKEN}`;\n\n  const [stationData, setStationData] = useState({});\n  const [metarData, setMetarData] = useState({});\n  const [tafData, setTafData] = useState({});\n  const [infoLoading, setInfoLoading] = useState(true);\n  const [metarLoading, setMetarLoading] = useState(true);\n  const [tafLoading, setTafLoading] = useState(true);\n\n  const getStationData = async () => {\n    try {\n      await fetch(stationUrl, {\n        headers: {\n          Authorization: `TOKEN ${token}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((json) => {\n          const newStationData = {\n            iata: json.iata,\n            icao: json.icao,\n            lat: json.latitude,\n            lon: json.longitude,\n            name: json.name,\n            country: json.country,\n            runways: json.runways,\n            elev_ft: json.elevation_ft,\n            elev_m: json.elevation_m,\n          };\n          setStationData(newStationData);\n          setInfoLoading(false);\n        });\n    } catch (error) {\n      console.error(\"Station fetch error: \" + error);\n    }\n  };\n\n  const getMetarData = async () => {\n    try {\n      await fetch(metarUrl, {\n        headers: {\n          Authorization: `TOKEN ${token}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((json) => {\n          const sincePublished = timeSincePublished(json);\n          const newMetarData = {\n            raw: json.raw,\n            flight_rules: json.flight_rules,\n            wind_direction: json.wind_direction.value,\n            wind_speed: json.wind_speed.value,\n            since: sincePublished,\n          };\n          setMetarData(newMetarData);\n          setMetarLoading(false);\n        });\n    } catch (error) {\n      console.error(\"METAR fetch error: \" + error);\n    }\n  };\n\n  const getTafData = async () => {\n    try {\n      await fetch(tafUrl, {\n        headers: {\n          Authorization: `TOKEN ${token}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((json) => {\n          const newTafData = {\n            raw: json.raw,\n          };\n          setTafData(newTafData);\n          setTafLoading(false);\n        });\n    } catch (error) {\n      console.error(\"TAF fetch error: \" + error);\n    }\n  };\n\n  //Aux function\n  const timeSince = (date) => {\n    let seconds = Math.floor((new Date() - date) / 1000);\n    let interval = seconds / 31536000;\n\n    if (interval > 1) {\n      return Math.floor(interval) + \" years\";\n    }\n    interval = seconds / 2592000;\n    if (interval > 1) {\n      return Math.floor(interval) + \" months\";\n    }\n    interval = seconds / 86400;\n    if (interval > 1) {\n      return Math.floor(interval) + \" days\";\n    }\n    interval = seconds / 3600;\n    if (interval > 1) {\n      return Math.floor(interval) + \" hours\";\n    }\n    interval = seconds / 60;\n    if (interval > 1) {\n      return Math.floor(interval) + \" minutes\";\n    }\n    return Math.floor(seconds) + \" seconds\";\n  };\n\n  const timeSincePublished = (data) => {\n    const offset = new Date().getTimezoneOffset(); //Offset in minutes ex: 180min = +3hs\n    const now = new Date();\n    const toLocal = parseInt(offset / 60);\n    const daypublished = parseInt(data.raw.slice(5, 7));\n    let publishedHr = parseInt(data.raw.slice(7, 9)) - toLocal;\n    if (publishedHr < 0) {\n      publishedHr = publishedHr % 12;\n    }\n    const publishedMin = parseInt(data.raw.slice(9, 11));\n    const published = new Date(\n      now.getFullYear(),\n      now.getMonth(),\n      daypublished,\n      publishedHr,\n      publishedMin,\n      0,\n      0\n    );\n\n    const res = timeSince(published);\n\n    //METAR reports \"expires\" after 1 hour\n    if (res.includes(\"minutes\")) {\n      return `${res} ago`;\n    } else {\n      return \"expired\";\n    }\n  };\n\n  useEffect(() => {\n    getStationData();\n    getMetarData();\n    getTafData();\n  });\n\n  return {\n    stationData,\n    metarData,\n    tafData,\n    infoLoading,\n    metarLoading,\n    tafLoading,\n  };\n};\n\nexport default useFetch;\n","import \"../../assets/styles/App.css\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { LoadingContainer, MainWrapper, FindNearbyButton } from \"./styles\";\nimport NavBar from \"./NavBar\";\nimport Metar from \"./Metar\";\nimport Taf from \"./Taf\";\nimport AirportInfo from \"./AirportInfo\";\nimport useFetch from \"../../hooks/useFetch\";\n\nconst Details = () => {\n  let history = useHistory();\n  let { ident } = useParams();\n  const {\n    stationData,\n    metarData,\n    tafData,\n    infoLoading,\n    metarLoading,\n    tafLoading,\n  } = useFetch(ident);\n\n  const getRunwaysList = () => {\n    const listRwys = stationData.runways.map((rwy) => {\n      return (\n        <span className=\"text small data-font runway\">\n          {rwy.ident1}/{rwy.ident2}\n        </span>\n      );\n    });\n    return (\n      <>\n        <p className=\"text small\">\n          <span className=\"bold\">Runways: </span>{\" \"}\n          {\" \" + stationData.runways.length}\n        </p>\n        <p className=\"text small\">{listRwys}</p>\n      </>\n    );\n  };\n\n  const formatCoordLat = (coord) => {\n    let res = coord;\n    res = Math.floor(res * 100) / 100;\n    if (res < 0) {\n      return `S ${Math.abs(res.toFixed(2))}`;\n    } else return `N ${Math.abs(res.toFixed(2))}`;\n  };\n\n  const formatCoordLong = (coord) => {\n    let res = coord;\n    res = Math.floor(res * 100) / 100;\n    if (res < 0) {\n      return `W ${Math.abs(res.toFixed(2))}`;\n    } else return `E ${Math.abs(res.toFixed(2))}`;\n  };\n\n  const roundCoord = (coord) => {\n    let res = coord;\n    res = Math.floor(res * 100) / 100;\n    return res.toFixed(2);\n  };\n\n  const findNearbyAirports = () => {\n    const coords =\n      roundCoord(stationData.lat) + \",\" + roundCoord(stationData.lon);\n    history.push(`/nearby/${coords}/${stationData.icao}`);\n  };\n\n  const seeAirportOnMap = () => {\n    const coords =\n      roundCoord(stationData.lat) + \",\" + roundCoord(stationData.lon);\n    history.push(`/location/${coords}/${stationData.icao}`);\n  };\n\n  const windInfo = () => {\n    const direction =\n      metarData.wind_direction === null\n        ? \"variable\"\n        : `${metarData.wind_direction}º`;\n    const speed =\n      metarData.wind_speed === 0 ? \"Wind calm\" : `${metarData.wind_speed} kts `;\n\n    if (speed === \"Wind calm\") {\n      return speed;\n    } else {\n      return direction + \" \" + speed;\n    }\n  };\n\n  const showFlightConditions = () => {\n    if (metarData.flight_rules.includes(\"VFR\")) {\n      return \"VMC\";\n    } else {\n      return \"IMC\";\n    }\n  };\n\n  if (metarLoading || tafLoading || infoLoading) {\n    return (\n      <LoadingContainer>\n        <h1>Loading...</h1>\n      </LoadingContainer>\n    );\n  } else {\n    return (\n      <div className=\"main\">\n        <NavBar\n          iata={stationData.iata}\n          icao={stationData.icao}\n          seeOnMap={seeAirportOnMap}\n        />\n\n        <MainWrapper>\n          <div>\n            <p className=\"text\">{stationData.name}</p>\n            <p className=\"text\">{stationData.country}</p>\n          </div>\n\n          <Metar\n            windInfo={windInfo()}\n            conditions={showFlightConditions()}\n            raw={metarData.raw}\n            timeAgo={metarData.since}\n          />\n\n          <Taf raw={tafData.raw} />\n\n          <AirportInfo\n            lat={formatCoordLat(stationData.lat)}\n            lon={formatCoordLong(stationData.lon)}\n            elevFt={stationData.elev_ft}\n            elevM={stationData.elev_m}\n            getRunwaysList={getRunwaysList}\n          />\n\n          <FindNearbyButton onClick={(e) => findNearbyAirports(e)}>\n            <p>FIND NEARBY</p>\n          </FindNearbyButton>\n        </MainWrapper>\n      </div>\n    );\n  }\n};\n\nexport default Details;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  background-color: #252e41;\n  height: 100px;\n  width: 95%;\n  margin-top: 5%;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 8px 8px 8px 8px;\n  align-self: center;\n  overflow-y: scroll;\n  /* small devices */\n  @media (max-height: 600px) {\n    height: 80px;\n    font-size: 0.85rem;\n    p {\n      font-size: 0.75rem;\n    }\n  }\n`;\n\nexport const TopInfoContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-right: 10px;\n  justify-content: space-between;\n`;\n\nexport const ListContainer = styled.div`\n  background-color: #232831;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  overflow-y: scroll;\n`;\n","import \"../../assets/styles/App.css\";\nimport { Container, TopInfoContainer } from \"./styles\";\n\nconst StationPreview = (props) => {\n  const roundDistance = (d) => {\n    let res = d;\n    res = Math.floor(res * 100) / 100;\n    return res.toFixed(0);\n  };\n\n  return (\n    <Container>\n      <TopInfoContainer>\n        <p className=\"text\">{props.name + \" \" + props.country}</p>\n        <p className=\"text bold\">{props.icao}</p>\n      </TopInfoContainer>\n      <div className=\"\">\n        <p className=\"text\">\n          {roundDistance(props.dist) + \" Nm from \" + props.from}\n        </p>\n      </div>\n    </Container>\n  );\n};\n\nexport default StationPreview;\n","import \"../../assets/styles/App.css\";\nimport StationPreview from \"./StationPreview\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst List = (props) => {\n  const url = `https://avwx.rest/api/station/near/${props.coords}?n=6&airport=true&format=json`;\n  const token = `${process.env.REACT_APP_TOKEN}`;\n\n  const [nearby, setNearby] = useState([]);\n\n  const getNearby = () => {\n    fetch(url, {\n      headers: {\n        Authorization: `TOKEN ${token}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setNearby(data);\n      })\n      .catch((error) => console.log(\"Nearby list fetch error: \" + error));\n  };\n\n  //Skip the airport itself\n  const slicedNearby = nearby.slice(1);\n\n  const listNearby = slicedNearby.map((a) => {\n    return (\n      <Link to={`/station/${a.station.icao}`} className=\"link\">\n        <StationPreview\n          key={a.station.iata}\n          icao={a.station.icao}\n          name={a.station.name}\n          dist={a.nautical_miles}\n          country={a.station.country}\n          from={props.ident}\n        />\n      </Link>\n    );\n  });\n\n  useEffect(() => getNearby(), []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return <>{listNearby}</>;\n};\n\nexport default List;\n","import { useParams } from \"react-router-dom\";\nimport \"../../assets/styles/App.css\";\nimport List from \"./List\";\nimport NavBar from \"../Details/NavBar\";\nimport { ListContainer } from \"./styles\";\n\nconst Nearby = () => {\n  let { coords } = useParams();\n  let { ident } = useParams();\n\n  return (\n    <div className=\"main\">\n      <NavBar nearby icao=\"Nearby Airports\" />\n      <ListContainer>\n        <div>\n          <List coords={coords} ident={ident} />\n        </div>\n      </ListContainer>\n    </div>\n  );\n};\n\nexport default Nearby;\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/Home/index\";\nimport ShowInMaps from \"./components/Maps/index\";\nimport Details from \"./components/Details/index\";\nimport Nearby from \"./components/Nearby/index\";\nimport \"./assets/styles/App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/avweather\" component={Home} />\n        <Route path=\"/station/:ident\" component={Details} />\n        <Route path=\"/nearby/:coords/:ident\" component={Nearby} />\n        <Route path=\"/location/:coords/:ident\" component={ShowInMaps} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}